import{s as K,e as o,a as r,c,l as n,g as a,m as V,i,n as A,f as l}from"./scheduler.D4vXfk3B.js";import{S as Q,i as W}from"./index.DBFCcoIS.js";function X(J){let s,O='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#circuitpatchconverter">CircuitPatchConverter</a></li></ol>',_,d,N="CircuitPatchConverter",L,h,S=`Circuit Patch converter takes in a .circuittrackspack (or other .zip file),
extracts the patches and converts these to the OG circuit format.
It does this by altering the 5th hexadecimal value from <code>64</code> to <code>60</code>.`,T,p,D='Available on my GitHub: <a href="https://github.com/codevogel/CircuitPatchConverter/" rel="nofollow">https://github.com/codevogel/CircuitPatchConverter/</a>',H,u,G="Requirements:",k,v,j="<li>Python 3.6+</li>",b,f,E="Step by step example:",M,C,I="<li>Clone this repository or download it as a .zip</li> <li>(Extract zip to a directory)</li> <li>Put your .circuittrackspack files in a folder called ‘Packs’ (like <code>someDir\\CircuitPatchConverter\\Packs</code>)</li> <li>Open your favourite console that supports python and navigate (using <code>cd</code>) to <code>someDir\\CircuitPatchConverter\\</code></li> <li>Launch the script using <code>python circuit-convert.py -i ./Packs/example.circuittrackspack</code></li> <li>Find your newly converted patches in <code>someDir\\CircuitPatchConverter\\Patches</code></li>",w,x,B="<strong>Please note:</strong> this program will overwrite existing <code>.syx</code> files in the output folder. If you are converting multiple packs one by one, be sure to alter the output directory using the <code>-o</code> option.",z,m,F="Usage:",g,y,R="<code>python circuit-convert.py -i &lt;inputfile&gt; \\[-o &lt;outputfile&gt; -p &lt;pathinzip&gt; -h &lt;help&gt;\\]</code>",q,P,U="<thead><tr><th>short</th> <th>long</th> <th>name</th> <th>description</th> <th>default</th></tr></thead> <tbody><tr><td>-i</td> <td>—input</td> <td>input file</td> <td>The file path of the .circuittrackspack or .zip to extract.</td> <td>N/A</td></tr> <tr><td>-o</td> <td>—output</td> <td>output file</td> <td>The path of the folder to extract the converted patches to.</td> <td>./Patches/</td></tr> <tr><td>-p</td> <td>—pathinzip</td> <td>path in zip file</td> <td>Path to folder in the zip file that contains the patches.</td> <td>patches/</td></tr> <tr><td>-h</td> <td>—help</td> <td>help</td> <td>Shows the help message.</td> <td>N/A</td></tr></tbody>";return{c(){s=o("nav"),s.innerHTML=O,_=r(),d=o("h1"),d.textContent=N,L=r(),h=o("p"),h.innerHTML=S,T=r(),p=o("p"),p.innerHTML=D,H=r(),u=o("p"),u.textContent=G,k=r(),v=o("ol"),v.innerHTML=j,b=r(),f=o("p"),f.textContent=E,M=r(),C=o("ol"),C.innerHTML=I,w=r(),x=o("p"),x.innerHTML=B,z=r(),m=o("p"),m.textContent=F,g=r(),y=o("p"),y.innerHTML=R,q=r(),P=o("table"),P.innerHTML=U,this.h()},l(t){s=c(t,"NAV",{class:!0,"data-svelte-h":!0}),n(s)!=="svelte-z9vuty"&&(s.innerHTML=O),_=a(t),d=c(t,"H1",{id:!0,"data-svelte-h":!0}),n(d)!=="svelte-19m25bu"&&(d.textContent=N),L=a(t),h=c(t,"P",{"data-svelte-h":!0}),n(h)!=="svelte-1xubm6h"&&(h.innerHTML=S),T=a(t),p=c(t,"P",{"data-svelte-h":!0}),n(p)!=="svelte-1ejtqms"&&(p.innerHTML=D),H=a(t),u=c(t,"P",{"data-svelte-h":!0}),n(u)!=="svelte-1gyp9h6"&&(u.textContent=G),k=a(t),v=c(t,"OL",{"data-svelte-h":!0}),n(v)!=="svelte-146dcot"&&(v.innerHTML=j),b=a(t),f=c(t,"P",{"data-svelte-h":!0}),n(f)!=="svelte-7axbid"&&(f.textContent=E),M=a(t),C=c(t,"OL",{"data-svelte-h":!0}),n(C)!=="svelte-1xks4y3"&&(C.innerHTML=I),w=a(t),x=c(t,"P",{"data-svelte-h":!0}),n(x)!=="svelte-c72c7n"&&(x.innerHTML=B),z=a(t),m=c(t,"P",{"data-svelte-h":!0}),n(m)!=="svelte-5wyjqd"&&(m.textContent=F),g=a(t),y=c(t,"P",{"data-svelte-h":!0}),n(y)!=="svelte-h01dxg"&&(y.innerHTML=R),q=a(t),P=c(t,"TABLE",{"data-svelte-h":!0}),n(P)!=="svelte-1pmcqxw"&&(P.innerHTML=U),this.h()},h(){V(s,"class","toc"),V(d,"id","circuitpatchconverter")},m(t,e){i(t,s,e),i(t,_,e),i(t,d,e),i(t,L,e),i(t,h,e),i(t,T,e),i(t,p,e),i(t,H,e),i(t,u,e),i(t,k,e),i(t,v,e),i(t,b,e),i(t,f,e),i(t,M,e),i(t,C,e),i(t,w,e),i(t,x,e),i(t,z,e),i(t,m,e),i(t,g,e),i(t,y,e),i(t,q,e),i(t,P,e)},p:A,i:A,o:A,d(t){t&&(l(s),l(_),l(d),l(L),l(h),l(T),l(p),l(H),l(u),l(k),l(v),l(b),l(f),l(M),l(C),l(w),l(x),l(z),l(m),l(g),l(y),l(q),l(P))}}}const $={title:"Circuit Patch Converter",description:"Converts synth patches for the new Novation Circuit to the format for the OG Circuit.",date:"2022-4-14",category:"tool",published:!0};class tt extends Q{constructor(s){super(),W(this,s,null,X,K,{})}}export{tt as default,$ as metadata};
